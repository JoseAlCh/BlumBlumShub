#p,q Dos numeros primos grandes
#p,q Deben ser congruentes a 3 mod 4
#x0  Es la semilla a usar (debe estar en binario)
#i   Es el numero de bits a incluir en la secuencia

def dec_to_bin(x):
    return int(bin(x)[2:])

def BlumBlumShub(p,q,x0,i):
   num_dec = int(str(x0),2)
   sec   = []
   '''
   print "Semilla X0 = ", x0, " en decimal = ", num_dec
   print "Numero primo p = ", p
   print "Numero primo q = ", q
   print "Numero de bits en la secuencia a generar = ", i
   '''
   for var in range(1,i+1):
     num_dec = num_dec*num_dec
     num_dec = num_dec % (p*q)
     bit   = str(dec_to_bin(num_dec))
     bit   = bit[-1:]
     sec.append(bit)
     print  var,num_dec, str(dec_to_bin(num_dec)),bit
   sec = ''.join(sec)
   print sec
   return

BlumBlumShub(11,19,11,5)